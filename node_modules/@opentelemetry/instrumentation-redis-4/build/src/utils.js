"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClientAttributes = exports.defaultDbStatementSerializer = void 0;
const semantic_conventions_1 = require("@opentelemetry/semantic-conventions");
const defaultDbStatementSerializer = cmdName => cmdName;
exports.defaultDbStatementSerializer = defaultDbStatementSerializer;
function getClientAttributes(options) {
    var _a, _b;
    return {
        [semantic_conventions_1.SemanticAttributes.DB_SYSTEM]: semantic_conventions_1.DbSystemValues.REDIS,
        [semantic_conventions_1.SemanticAttributes.NET_PEER_NAME]: (_a = options === null || options === void 0 ? void 0 : options.socket) === null || _a === void 0 ? void 0 : _a.host,
        [semantic_conventions_1.SemanticAttributes.NET_PEER_PORT]: (_b = options === null || options === void 0 ? void 0 : options.socket) === null || _b === void 0 ? void 0 : _b.port,
        [semantic_conventions_1.SemanticAttributes.DB_CONNECTION_STRING]: options === null || options === void 0 ? void 0 : options.url,
    };
}
exports.getClientAttributes = getClientAttributes;
//# sourceMappingURL=utils.js.map